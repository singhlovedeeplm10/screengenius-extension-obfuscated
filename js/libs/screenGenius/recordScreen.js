let intTimer;let timeoutTimer;let recordAnnotation=new recordAnnotationSG;let helpers=new helperSG;const timeoutTimerClass=function(callback,delay){let timerId,start,remaining=delay;this.pause=()=>{window.clearTimeout(timerId);timerId=null;remaining-=Date.now()-start};this.resume=()=>{if(timerId){return}start=Date.now();timerId=window.setTimeout(callback,remaining)};this.resume()};const IntervalTimer=function(callback,interval){let timerId,startTime,remaining=0;let state=0;this.pause=()=>{if(state!=1)return;remaining=interval-(new Date-startTime);window.clearInterval(timerId);state=2};this.resume=()=>{if(state!=2)return;state=3;window.setTimeout(this.timeoutCallback,remaining)};this.timeoutCallback=()=>{if(state!=3)return;callback();startTime=new Date;timerId=window.setInterval(callback,interval);state=1};startTime=new Date;timerId=window.setInterval(callback,interval);state=1};class recordScreenSG{constructor(){this.VideoDuration="0:00";this.selectedAnno="";this.VideoUpload=false;this.audioId="default";this.videoId="default";this.prevSelectionH=0;this.screenW=0;this.screenH=0;this.inPIPMode=false;this.recordingType="";this.quix_displayMediaOptions={};this.quix_videoElem=document.createElement("video");this.desktop_sharing=false;this.local_stream=null;this.cam_stream=null;this.screen_stream=null;this.combine_stream=null;this.audioStream=null;this.composedStream=null;this.screenStream=null;this.media_recorder=null;this.setTimerInterval=null;this.record_crop_startX;this.record_crop_startY;this.video_crop=false;this.uploadTypeSettings=false;this.fullSLoaderINT="";this.setBadgeText="";this.isCancelledRecord=false;this.isCameraRecord=true;this.isMicrophoneRecord=true;this.isPanelRecord=true;this.isPlayRecord=true;this.userConfirmedClose=false;this.recordingStarted=false;this.extPrefix="SG_";this.imagesLimit=30;this.videosLimit=15;this.isDevicesAvailable=true;this.dragIcon=chrome.runtime.getURL("/images/quix-drag-icon.png");this.webcamIcon=chrome.runtime.getURL("/images/quix-webcam-tool.png");this.webcamDisIcon=chrome.runtime.getURL("/images/quix-webcam-disabled-tool.png");this.microphoneIcon=chrome.runtime.getURL("/images/quix-microphone-icon2.png");this.microphoneDisIcon=chrome.runtime.getURL("/images/quix-microphone-disabled-icon.png");this.cursorIcon1=chrome.runtime.getURL("/images/quix-cursor-icon.png");this.cursorIcon2=chrome.runtime.getURL("/images/quix-cursor-icon1.png");this.cursorIcon3=chrome.runtime.getURL("/images/quix-cursor-icon2.png");this.cursorIcon4=chrome.runtime.getURL("/images/quix-cursor-icon3.png");this.pencilIcon=chrome.runtime.getURL("/images/quix-pencil-icon.png");this.erasorIcon=chrome.runtime.getURL("/images/quix-eraser-icon.png");this.arrowLeftIcon=chrome.runtime.getURL("/images/quix-arrow-left-icon.png");this.arrowRightIcon=chrome.runtime.getURL("/images/quix-arrow-right-icon.png");this.freeLineIcon=chrome.runtime.getURL("/images/quix-free-line-icon.png");this.blockIcon=chrome.runtime.getURL("/images/quix-block-icon.png");this.arrowToolIcon=chrome.runtime.getURL("/images/quix-for-icon.png");this.toolPauseIcon=chrome.runtime.getURL("/images/quix-tool-pause.png");this.toolPlayIcon=chrome.runtime.getURL("/images/quix-tool-play.png");this.vcallIcon=chrome.runtime.getURL("images/quix-video-call-icon.png");this.userIcon=chrome.runtime.getURL("images/quix-user-icon.png");this.youtubeIcon=chrome.runtime.getURL("images/quix-youtube-icon.png");this.GDIcon=chrome.runtime.getURL("images/quix-google-drive-icon.png");this.feedbackIcon=chrome.runtime.getURL("images/quix-share-feedback-form.png");this.successIcon=chrome.runtime.getURL("/images/quix-success.png");this.failureIcon=chrome.runtime.getURL("/images/quix-failure.png");this.stopRecIcon=chrome.runtime.getURL("/images/quix-tool-stop.png");this.delRecIcon=chrome.runtime.getURL("/images/quix-delete-icon.png");this.camSelectIcon=chrome.runtime.getURL("/images/quix-webcam-options.png");this.camOp1Icon=chrome.runtime.getURL("/images/quix-webcam-option1.png");this.camOp2Icon=chrome.runtime.getURL("/images/quix-webcam-option2.png");this.camOp3Icon=chrome.runtime.getURL("/images/quix-webcam-option3.png");this.camOp4Icon=chrome.runtime.getURL("/images/quix-webcam-option4.png");this.closeIcon=chrome.runtime.getURL("/images/quix-close-icon.png");this.blankVideo=chrome.runtime.getURL("/images/blank-video.mp4")}startRecording=(stream,autostopVal)=>{jQuery("#"+this.extPrefix+"recorder-wait-overlay").hide();if(this.isMicrophoneRecord){this.toolbarToggleMic("enabled")}else{this.toolbarToggleMic("disabled")}chrome.runtime.sendMessage({type:"setIsRecorderStarted"});let options={mimeType:"video/webm;codecs=vp9"};this.media_recorder=new MediaRecorder(stream,options);let data=[];this.media_recorder.ondataavailable=event=>data.push(event.data);this.media_recorder.start(1e3);this.media_recorder.onstart=()=>{jQuery("#"+this.extPrefix+"recorder-tool-controls ."+this.extPrefix+"timer-rec").text("00:01");this.recordingStarted=true;let timer=1;if(autostopVal>0){timer=autostopVal}let duration=0;let minutes=0;let seconds=1;intTimer=new IntervalTimer(()=>{if(autostopVal>0){--timer}else{++timer}if(timer<0){timer=0}minutes=parseInt(timer/60,10);seconds=parseInt(timer%60,10);minutes=minutes<10?"0"+minutes:minutes;seconds=seconds<10?"0"+seconds:seconds;let timerStr=minutes+":"+seconds;if(this.recordingType!=1){jQuery("#"+this.extPrefix+"recorder-tool-controls ."+this.extPrefix+"timer-rec").text(timerStr)}this.VideoDuration=timerStr;chrome.runtime.sendMessage({type:"setBadge",badgeText:timerStr,isCamera:this.isCameraRecord,isMicrophone:this.isMicrophoneRecord,isPanel:this.isPanelRecord,isPlay:this.isPlayRecord});chrome.runtime.sendMessage({type:"sendRecorderToolData",badgeText:this.VideoDuration,isCamera:this.isCameraRecord,isMicrophone:this.isMicrophoneRecord,isPanel:this.isPanelRecord,isPlay:this.isPlayRecord,recordingType:this.recordingType,isDevicesAvailable:this.isDevicesAvailable});if(this.recordingType==1){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"toolbarEventsAllTabsTimer",badgeText:this.VideoDuration})}},1e3);if(autostopVal>0){autostopVal=parseInt(autostopVal);timeoutTimer=new timeoutTimerClass(()=>{if(this.recordingType==1){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"hideToolbar"})}this.stopScreenRecording()},autostopVal*1e3)}else{if(helpers.videoLength>-1){timeoutTimer=new timeoutTimerClass(()=>{this.VideoDuration=helpers.limitStopStr;chrome.runtime.sendMessage({type:"setBadge",badgeText:helpers.limitStopStr,isCamera:this.isCameraRecord,isMicrophone:this.isMicrophoneRecord,isPanel:this.isPanelRecord,isPlay:this.isPlayRecord});chrome.runtime.sendMessage({type:"sendRecorderToolData",badgeText:this.VideoDuration,isCamera:this.isCameraRecord,isMicrophone:this.isMicrophoneRecord,isPanel:this.isPanelRecord,isPlay:this.isPlayRecord,recordingType:this.recordingType,isDevicesAvailable:this.isDevicesAvailable});if(this.recordingType==1){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"toolbarEventsAllTabsTimer",badgeText:this.VideoDuration})}if(this.recordingType==1){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"hideToolbar"})}if(this.recordingType!=1){jQuery("#"+this.extPrefix+"recorder-tool-controls ."+this.extPrefix+"timer-rec").text(helpers.limitStopStr)}this.stopScreenRecording()},helpers.videoLength*1e3)}}};let tracks=stream.getTracks();if(tracks.length>0){tracks.forEach(track=>{track.onended=()=>{if(this.recordingType==1){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"hideToolbar"})}this.stopScreenRecording()}})}let stopped=new Promise((resolve,reject)=>{this.media_recorder.onstop=resolve;this.media_recorder.onerror=event=>reject(event.name)});return Promise.all([stopped]).then(()=>data)};combineMultipleStreams=(screenStream,micStream,callback)=>{this.composedStream=new MediaStream;screenStream.getVideoTracks().forEach(videoTrack=>{this.composedStream.addTrack(videoTrack)});let context=new AudioContext;let audioDestinationNode=context.createMediaStreamDestination();if(screenStream&&screenStream.getAudioTracks().length>0){const systemSource=context.createMediaStreamSource(screenStream);const systemGain=context.createGain();systemGain.gain.value=1;systemSource.connect(systemGain).connect(audioDestinationNode)}if(micStream&&micStream.getAudioTracks().length>0){const micSource=context.createMediaStreamSource(micStream);const micGain=context.createGain();micGain.gain.value=1;micSource.connect(micGain).connect(audioDestinationNode)}audioDestinationNode.stream.getAudioTracks().forEach(audioTrack=>{this.composedStream.addTrack(audioTrack)});callback(this.composedStream)};quix_startCapture=async(request,currentTab)=>{let data={watermarkSettings:""};chrome.storage.local.set(data,()=>{});let type=request.event;this.recordingType=type;let isMicrophone=request.isMicrophone;let isCamera=request.isCamera;let autostopVal=request.autostopVal;let qualityVal=request.qualityVal;let recordDelay=request.recordDelay;let uploadType=request.uploadType;if(request.micID!==null&&request.micID!=""){this.audioId=request.micID}if(request.camID!==null&&request.camID!=""){this.videoId=request.camID}if(uploadType!="Local"){this.VideoUpload=true}this.isCameraRecord=isCamera;this.isMicrophoneRecord=isMicrophone;if(qualityVal=="360p"){this.screenW=480;this.screenH=360}else if(qualityVal=="480p"){this.screenW=720;this.screenH=480}else if(qualityVal=="720p"){this.screenW=1280;this.screenH=720}else if(qualityVal=="1080p"){this.screenW=1920;this.screenH=1080}else{this.screenW=3840;this.screenH=2160}if(type==2){this.isCameraRecord=true;if(this.recordingType==1){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"displayToolbar",autostopVal:autostopVal,delayD:true,recordDelay:recordDelay,recordingType:this.recordingType,isCamera:this.isCameraRecord,isMicrophone:this.isMicrophoneRecord,isPanel:this.isPanelRecord,isPlay:this.isPlayRecord})}this.displayControls(autostopVal,true,recordDelay,this.isDevicesAvailable,async()=>{this.recordCameraScreen(stream=>{this.startRecording(stream,autostopVal).then(recordedChunks=>{this.downloadCapturedVideo(recordedChunks)})})})}else if(type==3||type==4){try{this.screenStream=await navigator.mediaDevices.getDisplayMedia({preferCurrentTab:true,audio:true,video:{deviceId:this.videoId,width:{ideal:this.screenW},height:{ideal:this.screenH}}});let delay=true;if(type==4){delay=false}this.displayControls(autostopVal,delay,recordDelay,this.isDevicesAvailable,async()=>{if(type==4){let cropTarget=await CropTarget.fromElement(document.querySelector("."+this.extPrefix+"screen-cap-content"));const[videoTrack]=this.screenStream.getVideoTracks();await videoTrack.cropTo(cropTarget)}if(this.isDevicesAvailable){this.audioStream=await navigator.mediaDevices.getUserMedia({audio:{mandatory:{deviceId:this.audioId}},video:false});this.combineMultipleStreams(this.screenStream,this.audioStream,stream=>{this.combine_stream=stream;if(this.isCameraRecord){this.recordCameraScreen()}this.startRecording(this.combine_stream,autostopVal).then(recordedChunks=>{this.downloadCapturedVideo(recordedChunks)})})}else{this.combine_stream=this.screenStream;this.startRecording(this.combine_stream,autostopVal).then(recordedChunks=>{this.downloadCapturedVideo(recordedChunks)})}})}catch(err){console.log(err,"--err--")}}else{try{this.screenStream=await navigator.mediaDevices.getDisplayMedia({audio:true,video:{mediaSource:"screen",displaySurface:"monitor"}});if(this.recordingType==1){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"displayToolbar",autostopVal:autostopVal,delayD:true,recordDelay:recordDelay,recordingType:this.recordingType,isCamera:this.isCameraRecord,isMicrophone:this.isMicrophoneRecord,isPanel:this.isPanelRecord,isPlay:this.isPlayRecord})}this.displayControls(autostopVal,true,recordDelay,this.isDevicesAvailable,async()=>{if(this.isDevicesAvailable){this.audioStream=await navigator.mediaDevices.getUserMedia({audio:true,video:false});this.combineMultipleStreams(this.screenStream,this.audioStream,async stream=>{await chrome.tabs.update(currentTab.id,{active:true,selected:true});this.combine_stream=stream;if(this.isCameraRecord){this.recordCameraScreen()}this.startRecording(this.combine_stream,autostopVal).then(recordedChunks=>{this.downloadCapturedVideo(recordedChunks)})})}else{await chrome.tabs.update(currentTab.id,{active:true,selected:true});this.combine_stream=this.screenStream;this.startRecording(this.combine_stream,autostopVal).then(recordedChunks=>{this.downloadCapturedVideo(recordedChunks)})}})}catch(err){await chrome.tabs.update(currentTab.id,{active:true,selected:true});window.top.close()}}};createObjectURL=object=>{return window.URL?window.URL.createObjectURL(object):window.webkitURL.createObjectURL(object)};displayCamStream=stream=>{let camPreview=document.getElementById(this.extPrefix+"camera-recording-preview");camPreview.srcObject=stream;camPreview.play()};stopCameraScreen=()=>{if(this.cam_stream&&this.cam_stream!==null){this.removeCamStreams();this.cam_stream=null;if(this.recordingType==1){this.exitPictureInPicture()}}};recordCameraScreen=callback=>{chrome.storage.local.get(`${helpers.extPrefix}isPictureInPicture`,async obj=>{if(!obj[`${helpers.extPrefix}isPictureInPicture`]&&this.isCameraRecord){if(this.cam_stream===undefined||this.cam_stream===null){let camPreview=document.getElementById(this.extPrefix+"camera-recording-preview");if(camPreview==undefined&&camPreview==null){camPreview=document.createElement("video");camPreview.id=this.extPrefix+"camera-recording-preview";camPreview.className=this.extPrefix+"camera-recording-preview";camPreview.src=this.blankVideo;if(this.recordingType!=1){camPreview.style.display="none"}document.getElementsByTagName("body")[0].append(camPreview)}else{camPreview.src=this.blankVideo}if(this.recordingType==1){setTimeout(()=>{let data7={[`${helpers.extPrefix}isPictureInPicture`]:true};chrome.storage.local.set(data7,()=>{});this.enablePictureInPicture();jQuery("#"+this.extPrefix+"camera-recording-preview").hide()},500)}else{jQuery("#"+this.extPrefix+"camera-recording-preview").show()}navigator.webkitGetUserMedia({audio:false,video:{mandatory:{deviceId:this.videoId,width:{ideal:this.screenW},height:{ideal:this.screenH},frameRate:{min:15,ideal:24,max:30}}}},stream=>{this.cam_stream=stream;camPreview.srcObject=stream;camPreview.play();if(callback&&callback!==undefined&&typeof callback=="function"){callback(stream)}},err=>{this.isCameraRecord=false;if(this.recordingType!=1){if(this.recordingType==2){this.isCancelledRecord=true;this.stopScreenRecording();failureMessagePopup("Recording Failed.","Recording cannot be started due to lack of permissions.")}else{this.isCameraRecord=false;if(this.recordingType!=1){if(this.cam_stream!==undefined&&this.cam_stream!==null){this.cam_stream.getVideoTracks()[0].enabled=false}jQuery("#"+this.extPrefix+"video-outer").css({display:"none",height:0})}jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec").show();jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec-disable").hide();this.stopCameraScreen()}}else{this.inPIPMode=true;this.exitPictureInPicture()}jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec").show();jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec-disable").hide();console.error(`The following error occurred: ${err.name}`)})}else{if(callback&&callback!==undefined&&typeof callback=="function"){callback(this.cam_stream)}}}else{if((this.cam_stream!==undefined||this.cam_stream!==null)&&callback&&callback!==undefined&&typeof callback=="function"){callback(this.cam_stream)}}})};enablePictureInPicture=async()=>{try{let camPreview=document.getElementById(this.extPrefix+"camera-recording-preview");if(document.pictureInPictureEnabled||camPreview.webkitSetPresentationMode){await camPreview.requestPictureInPicture();this.inPIPMode=true;let camPreviewOuter=document.getElementById(this.extPrefix+"video-outer");if(camPreviewOuter!==null){camPreviewOuter.style.display="none"}camPreview.addEventListener("leavepictureinpicture",this.handleVisibilityChange)}else{console.log("Picture-in-Picture is not supported in this browser.")}}catch(error){console.error("Error while entering Picture-in-Picture mode:",error)}};handleVisibilityChange=()=>{if(document.visibilityState==="visible"&&this.inPIPMode){if(this.isCameraRecord){this.toolbarToggleCam("disabled")}this.inPIPMode=false}};exitPictureInPicture=async()=>{try{if(this.inPIPMode&&document.exitPictureInPicture){if(document.pictureInPictureElement){await document.exitPictureInPicture()}this.inPIPMode=false;let data8={[`${helpers.extPrefix}isPictureInPicture`]:false};chrome.storage.local.set(data8,()=>{});jQuery("."+this.extPrefix+"camera-recording-preview").remove();chrome.runtime.sendMessage({type:"removeCameraPreview"})}}catch(error){console.error("Error while exiting Picture-in-Picture mode:",error)}};downloadCapturedVideo=recordedChunks=>{if(!this.isCancelledRecord){let recordedBlob=new Blob(recordedChunks,{type:"video/webm;codecs=vp9"});let videoSize=recordedBlob.size;const href=URL.createObjectURL(recordedBlob);chrome.runtime.sendMessage({type:"openDownloadVideoTab",videodata:href,videoSize:videoSize,VideoDuration:this.VideoDuration,VideoUpload:this.VideoUpload});setTimeout(()=>{if(this.recordingType==1){window.top.close()}},2e3)}else{setTimeout(()=>{if(this.recordingType==1){window.top.close()}},500)}this.isCancelledRecord=false};startTimer=(duration,callback)=>{let timer=duration,minutes,seconds;this.setTimerInterval=setInterval(()=>{minutes=parseInt(timer/60,10);seconds=parseInt(timer%60,10);minutes=minutes<10?"0"+minutes:minutes;seconds=seconds<10?"0"+seconds:seconds;callback(minutes+":"+seconds);if(++timer<0){timer=0}},1e3)};displayCameraWindow=appendTo=>{if(appendTo==undefined){let appendTo="body"}let camBlock=document.getElementById(this.extPrefix+"video-outer");if(camBlock===undefined||camBlock===null){let camHTML="";camHTML+='<div id="'+this.extPrefix+'video-outer">\n            <div id="'+this.extPrefix+'video-inner">';let camP=document.getElementById(this.extPrefix+"camera-recording-preview");if(camP===undefined||camP===null){camHTML+='<video muted id="'+this.extPrefix+'camera-recording-preview"></video>'}camHTML+='</div>\n            <div id="'+this.extPrefix+'camera-tool-controls">\n                <div id="'+this.extPrefix+'camera-tool-controls-inner">\n                <div id="'+this.extPrefix+'camera-tool-selector">\n                    <span><img src="'+this.camSelectIcon+'"/></span>\n                </div>\n                <div id="'+this.extPrefix+'camera-tool-options">\n                    \x3c!--<span class="'+this.extPrefix+'select-camera-option" data-option="1"><img src="'+this.camOp1Icon+'"/></span>--\x3e\n                    <span class="'+this.extPrefix+'select-camera-option" data-option="2"><img src="'+this.camOp2Icon+'"/></span>\n                    <span class="'+this.extPrefix+'select-camera-option" data-option="3"><img src="'+this.camOp3Icon+'"/></span>\n                    <span class="'+this.extPrefix+'select-camera-option" data-option="4"><img src="'+this.camOp4Icon+'"/></span>\n                    <div class="sideBar-seperator">|</div>\n                    <span class="'+this.extPrefix+'camera-close-option"><img src="'+this.closeIcon+'"/></span>\n                </div>\n                </div>\n            </div>\n            </div>';let toolBW=325;let toolX=20;let toolY=20;let offset={bottom:toolX,right:toolY};let newElement$=$(camHTML).width(toolBW).draggable({cancel:"text",containment:appendTo,start:()=>{},stop:()=>{},scroll:false,drag:function(e,ui){let self=$(this);let parent=$(appendTo);let pos=self.position();pos.left=pos.left-parent.offset().left-2;pos.top=pos.top-parent.offset().top-2;$("#"+self.data("index")).html("top: "+pos.top+" left:"+pos.left)}}).css({position:"absolute"}).offset(offset).appendTo(appendTo)}};displayControls=(autostopVal,delay,recordDelay,controls,callback)=>{this.isDevicesAvailable=controls;if(jQuery("#"+this.extPrefix+"floatable-recorder-tool").length>0){return}let html="";let htmlWaitOverlay="";let delayVal=null;if(recordDelay>0&&recordDelay!==undefined){delayVal=recordDelay}html+='<div id="'+this.extPrefix+'floatable-recorder-tool">\n            <div id="'+this.extPrefix+'floatable-recorder-tool-inner">\n            <div id="'+this.extPrefix+'recorder-tool-controls">\n                <div id="'+this.extPrefix+'recorder-tool-controls-inner">';html+='<span class="'+this.extPrefix+'minimize-rec" title="Minimize Recording"><img src="'+this.arrowLeftIcon+'"/></span>\n                    <span class="'+this.extPrefix+'maximize-rec" title="Maximize Recording"><img src="'+this.arrowRightIcon+'"/></span>\n                    <div class="'+this.extPrefix+'toolbar-option-can-hide">\n                    <span class="'+this.extPrefix+'close-rec" title="Cancel Recording"><img src="'+this.delRecIcon+'"/></span>';if(this.recordingType!="2"){html+='<div class="'+this.extPrefix+'remove-anno-effects" title="Remove All Annotations">\n                            <div class="'+this.extPrefix+'remove-anno-choose"><span class="'+this.extPrefix+'remove-all-annotations"><img src="'+this.erasorIcon+'"/></span></div>\n                        </div>\n                        <div class="'+this.extPrefix+'anno-effects">\n                            <div class="'+this.extPrefix+'anno-choose"><span title="Annotations"><img src="'+this.pencilIcon+'"/></span><div class="'+this.extPrefix+'effect-child-options"><span class="'+this.extPrefix+'anno-free-line" title="Draw Free Hand"><img src="'+this.freeLineIcon+'"/></span><span class="'+this.extPrefix+'anno-reactangle" title="Draw Reactangle"><img src="'+this.blockIcon+'"/></span><span class="'+this.extPrefix+'anno-arrow" title="Draw Arrow"><img src="'+this.arrowToolIcon+'"/></span><span title="Annotation Color" class="'+this.extPrefix+"tool-color "+this.extPrefix+'tool-color-red" data-color="#ff0000"></span><span title="Annotation Color" class="'+this.extPrefix+"tool-color "+this.extPrefix+'tool-color-blue" data-color="#0000ff"></span><span title="Annotation Color" class="'+this.extPrefix+"tool-color "+this.extPrefix+'tool-color-green" data-color="#00FF00"></span></div></div>\n                        </div>\n                        <div class="'+this.extPrefix+'arrow-effects">\n                            <div class="'+this.extPrefix+'arrow-effect-choose"><span title="Arrow Effects"><img src="'+this.cursorIcon1+'"/></span><div class="'+this.extPrefix+'effect-child-options"><span class="'+this.extPrefix+'arrow-spotlight" title="Spotlight Arrow"><img src="'+this.cursorIcon4+'"/></span><span class="'+this.extPrefix+'arrow-highlight-click" title="Click Arrow"><img src="'+this.cursorIcon3+'"/></span><span class="'+this.extPrefix+'arrow-highlight-mouse" title="Mouse Highlight Arrow"><img src="'+this.cursorIcon2+'"/></span><span class="'+this.extPrefix+'arrow-default" title="Simple Arrow"><img src="'+this.cursorIcon1+'"/></span></div></div>\n                        </div>\n                        <div class="sideBar-seperator">|</div>'}html+='<span class="'+this.extPrefix+'mic-rec-disable" title="Disable Microphone"><img src="'+this.microphoneIcon+'"/></span>\n                    <span class="'+this.extPrefix+'mic-rec" title="Enable Microphone"><img src="'+this.microphoneDisIcon+'"/></span>';if(this.recordingType!="2"){html+='<span class="'+this.extPrefix+'cam-rec-disable" title="Disable Camera"><img src="'+this.webcamIcon+'"/></span>\n                    <span class="'+this.extPrefix+'cam-rec" title="Enable Camera"><img src="'+this.webcamDisIcon+'"/></span>'}html+='<span class="'+this.extPrefix+'stop-rec" title="Stop Recording"><img src="'+this.stopRecIcon+'"/></span>\n                    <span class="'+this.extPrefix+'play-rec" title="Pause Recording"><img src="'+this.toolPlayIcon+'"/></span>\n                    <span class="'+this.extPrefix+'pause-rec" title="Resume Recording"><img src="'+this.toolPauseIcon+'"/></span>\n                    </div>\n                <span class="'+this.extPrefix+'timer-rec">00.00</span>\n                <span class="'+this.extPrefix+'drag-icon"><img src="'+this.dragIcon+'"/></span>\n                </div>\n                <div id="'+this.extPrefix+'recorder-tool-custom-tab">\n                <span id="'+this.extPrefix+'custom-tab-start-recording"><img src="'+this.toolPlayIcon+'"/></span>\n                <span id="'+this.extPrefix+'custom-tab-cancel-recording"><img src="'+this.closeIcon+'"/></span>\n                </div>\n            </div>\n            <div class="'+this.extPrefix+'close-toobar" title="Close toolbar"><img src="'+this.closeIcon+'"/></div>\n            </div>\n        </div>';if(delay){if(recordDelay!==undefined){htmlWaitOverlay+='<div id="'+this.extPrefix+'recorder-wait-overlay">\n                    <div class="'+this.extPrefix+'recorder-wait-overlay-inner">\n                    <p>Your Screen Recording will start in <span class="timer-span">'+delayVal+'</span> seconds <span class="loader__dot">.</span><span class="loader__dot">.</span><span class="loader__dot">.</span></p>\n                    </div>\n                </div><div id="'+this.extPrefix+'floatable-recorder-tool-container"></div><div id="'+this.extPrefix+'floatable-recorder-camera-container"></div>';jQuery("#"+this.extPrefix+"floatable-recorder-tool").remove();jQuery("#"+this.extPrefix+"video-outer").remove();jQuery("#"+this.extPrefix+"recorder-wait-overlay").remove();jQuery("body").append(htmlWaitOverlay);this.delayBeforeRecording(delayVal,()=>{this.controlBarCallbacks("normal",html,delayVal,autostopVal,callback);this.controlBarButtonCallbacks(delayVal,autostopVal,callback)})}else{let inHTML='<div id="'+this.extPrefix+'recorder-wait-overlay"></div><div id="'+this.extPrefix+'floatable-recorder-tool-container"></div><div id="'+this.extPrefix+'floatable-recorder-camera-container"></div>';jQuery("body").append(inHTML);this.controlBarCallbacks("normal",html,delayVal,autostopVal,callback);this.controlBarButtonCallbacks(delayVal,autostopVal,callback)}}else{htmlWaitOverlay+='<div id="'+this.extPrefix+'selected-screen-capture"><div id="'+this.extPrefix+'selected-screen-capture-inner"><div class="'+this.extPrefix+'screen-cap-top"></div><div class="'+this.extPrefix+'screen-cap-right"></div><div class="'+this.extPrefix+'screen-cap-left"></div><div class="'+this.extPrefix+'screen-cap-bottom"></div><div class="'+this.extPrefix+'screen-cap-content"></div></div></div><div id="'+this.extPrefix+'floatable-recorder-tool-container"></div><div id="'+this.extPrefix+'floatable-recorder-camera-container"></div>';jQuery("#"+this.extPrefix+"floatable-recorder-tool").remove();jQuery("#"+this.extPrefix+"video-outer").remove();jQuery("#"+this.extPrefix+"recorder-wait-overlay").remove();jQuery("body").append(htmlWaitOverlay);this.controlBarCallbacks("custom",html,delayVal,autostopVal,callback)}};putCamOptionCenter=()=>{let camWid=jQuery("#"+this.extPrefix+"video-outer").width();if(camWid<0){camWid=325}let camLeft=camWid/2-20;if(this.recordingType!=1){jQuery("#"+this.extPrefix+"camera-tool-selector").css({left:camLeft+"px"})}jQuery("#"+this.extPrefix+"camera-tool-options").hide()};assignCorrectVidHeight=()=>{let topVal=parseInt(jQuery("#"+this.extPrefix+"floatable-recorder-tool").css("top"));let hh=0;if(jQuery("#"+this.extPrefix+"video-outer").hasClass("camera-view-1")){hh=75}if(jQuery("#"+this.extPrefix+"video-outer").hasClass("camera-view-2")){hh=125}if(jQuery("#"+this.extPrefix+"video-outer").hasClass("camera-view-3")){hh=200}if(jQuery("#"+this.extPrefix+"video-outer").hasClass("camera-view-4")){hh=206}let hDiff=this.prevSelectionH-hh;let topM=topVal+hDiff;if(topM<0){topM=0}if(this.recordingType!=1){let camHeight=parseInt(jQuery("#"+this.extPrefix+"camera-recording-preview").height());let toolTop=parseInt(jQuery("#"+this.extPrefix+"floatable-recorder-tool").css("top"));let toolTopPos=toolTop-camHeight;jQuery("#"+this.extPrefix+"floatable-recorder-tool").css({top:toolTopPos,bottom:"unset"});jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner #"+this.extPrefix+"video-outer").css({height:hh})}jQuery("#"+this.extPrefix+"floatable-recorder-tool").css({top:topVal,bottom:"unset"});if(this.prevSelectionH==0){this.prevSelectionH=hh}};controlBarButtonCallbacks=(delayVal,autostopVal,callback)=>{recordAnnotation.annotationsEventListeners();if(this.isCameraRecord&&this.recordingType!=1){jQuery("#"+this.extPrefix+"video-outer").css({display:"block",height:"auto"})}if(this.recordingType!=1&&this.recordingType!=2){if(callback&&callback!==undefined){callback()}}else{if(callback&&callback!==undefined){callback()}}jQuery("#"+this.extPrefix+"floatable-recorder-tool").show();jQuery("#"+this.extPrefix+"recorder-wait-overlay").hide();jQuery("#"+this.extPrefix+"camera-tool-selector span").unbind("click");jQuery("#"+this.extPrefix+"camera-tool-selector span").on("click",()=>{jQuery("#"+this.extPrefix+"camera-tool-options").show()});jQuery("#"+this.extPrefix+"video-outer").unbind("mouseover");jQuery("#"+this.extPrefix+"video-outer").on("mouseover",()=>{jQuery("#"+this.extPrefix+"camera-tool-controls").show()});jQuery("#"+this.extPrefix+"video-outer").unbind("mouseout");jQuery("#"+this.extPrefix+"video-outer").on("mouseout",()=>{jQuery("#"+this.extPrefix+"camera-tool-controls").hide()});jQuery("#"+this.extPrefix+"camera-tool-options img").unbind("click");jQuery("#"+this.extPrefix+"camera-tool-options img").on("click",elem=>{let camOption=jQuery(elem.currentTarget).parent("span").attr("data-option");if(camOption!==undefined){jQuery("#"+this.extPrefix+"video-outer").removeAttr("class");jQuery("#"+this.extPrefix+"video-outer").addClass("camera-view-"+camOption);this.assignCorrectVidHeight();if(this.recordingType!=1){this.putCamOptionCenter()}}});jQuery("."+this.extPrefix+"camera-close-option").unbind("click");jQuery("."+this.extPrefix+"camera-close-option").on("click",()=>{jQuery("#"+this.extPrefix+"camera-tool-options").hide()});jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"close-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"close-rec").on("click",()=>{this.cancelScreenRecording()});jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"minimize-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"minimize-rec").on("click",()=>{jQuery("."+this.extPrefix+"toolbar-option-can-hide").hide();jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"minimize-rec").hide();jQuery("#"+this.extPrefix+"floatable-recorder-tool").css({width:"145px"});jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"maximize-rec").show()});jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"maximize-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"maximize-rec").on("click",()=>{jQuery("."+this.extPrefix+"toolbar-option-can-hide").show();jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"minimize-rec").show();if(this.recordingType!="2"){jQuery("#"+this.extPrefix+"floatable-recorder-tool").css({width:"450px"})}else{jQuery("#"+this.extPrefix+"floatable-recorder-tool").css({width:"285px"})}jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"maximize-rec").hide()});jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"stop-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"stop-rec").on("click",()=>{if(this.recordingType==1){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"hideToolbar"})}this.stopScreenRecording()});jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec-disable").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec-disable").on("click",()=>{if(this.isDevicesAvailable){this.toolbarToggleCam("disabled")}});jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"mic-rec-disable").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"mic-rec-disable").on("click",()=>{if(this.isDevicesAvailable){this.toolbarToggleMic("disabled")}});jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec").on("click",()=>{if(this.isDevicesAvailable){this.toolbarToggleCam("enabled")}});jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"mic-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"mic-rec").on("click",()=>{if(this.isDevicesAvailable){this.toolbarToggleMic("enabled")}});jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"play-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"play-rec").on("click",()=>{this.toolbarPlayPause("play")});jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"pause-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"pause-rec").on("click",()=>{this.toolbarPlayPause("pause")});jQuery("."+this.extPrefix+"close-toobar").unbind("click");jQuery("."+this.extPrefix+"close-toobar").on("click",()=>{this.hidePanelRecording("disabled")});jQuery("."+this.extPrefix+"remove-all-annotations").unbind("click");jQuery("."+this.extPrefix+"remove-all-annotations").on("click",()=>{recordAnnotation.removeAnnotations()});jQuery("."+this.extPrefix+"tool-color").unbind("click");jQuery("."+this.extPrefix+"tool-color").on("click",elem=>{let selectedColor=jQuery(elem.currentTarget).attr("data-color");recordAnnotation.anno_selectedColor=selectedColor})};controlBarCallbacks=(type,html,delayVal,autostopVal,callback)=>{let _this=this;let toolBW=285;let toolBH=40;if(this.recordingType!="2"){toolBW=450}let toolX=20;let toolY=20;if(type=="custom"){toolBW=76}let offset={bottom:toolX,left:toolY};this.displayCameraWindow("#"+this.extPrefix+"floatable-recorder-camera-container");let newElement$=$(html).width(toolBW).draggable({cancel:"text",containment:"#"+this.extPrefix+"floatable-recorder-tool-container",start:()=>{jQuery("#"+this.extPrefix+"floatable-recorder-tool").css({bottom:"unset"})},stop:()=>{},scroll:false,drag:function(e,ui){let self=$(this);let parent=$("#"+_this.extPrefix+"floatable-recorder-tool-container");let pos=self.position();pos.left=pos.left-parent.offset().left-2;pos.top=pos.top-parent.offset().top-2;$("#"+self.data("index")).html("top: "+pos.top+" left:"+pos.left)}}).css({position:"fixed"}).offset(offset).appendTo("#"+this.extPrefix+"floatable-recorder-tool-container");if(this.recordingType!=1){if(type!="custom"){jQuery("#"+this.extPrefix+"video-outer").addClass("camera-view-3");this.prevSelectionH=206}}this.recorderControlPanelStates();if(this.recordingType!=1){this.putCamOptionCenter()}jQuery("#"+this.extPrefix+"custom-tab-cancel-recording").unbind("click");jQuery("#"+this.extPrefix+"custom-tab-cancel-recording").on("click",()=>{jQuery("#"+this.extPrefix+"selected-screen-capture").remove();jQuery("#"+this.extPrefix+"floatable-recorder-tool-container").remove();jQuery("#"+this.extPrefix+"floatable-recorder-camera-container").remove();this.isCancelledRecord=true;if(this.recordingType==1){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"cancelToolbar"})}this.stopScreenRecording()});jQuery("#"+this.extPrefix+"custom-tab-start-recording").unbind("click");jQuery("#"+this.extPrefix+"custom-tab-start-recording").on("click",()=>{jQuery("#"+this.extPrefix+"custom-tab-start-recording").css({"pointer-events":"none"});let htmlWaitOverlay="";htmlWaitOverlay+='<div id="'+this.extPrefix+'recorder-wait-overlay">\n            <div class="'+this.extPrefix+'recorder-wait-overlay-inner">\n                <p>Your Screen Recording will start in <span class="timer-span">'+delayVal+'</span> seconds <span class="loader__dot">.</span><span class="loader__dot">.</span><span class="loader__dot">.</span></p>\n            </div>\n            </div>';jQuery("."+this.extPrefix+"screen-cap-content").append(htmlWaitOverlay);this.delayBeforeRecording(delayVal,()=>{jQuery("#"+this.extPrefix+"selected-screen-capture-inner").css({"pointer-events":"none"});jQuery("#"+this.extPrefix+"recorder-tool-controls-inner").show();jQuery("#"+this.extPrefix+"camera-recording-preview").show();jQuery("."+this.extPrefix+"close-toobar").show();jQuery("#"+this.extPrefix+"recorder-tool-custom-tab").hide();jQuery("#"+this.extPrefix+"floatable-recorder-tool").remove();jQuery("#"+this.extPrefix+"video-outer").remove();let toolBW=285;if(this.recordingType!="2"){toolBW=450}let toolX=20;let toolY=20;let offset={bottom:toolY,left:toolX};let appendTo="."+this.extPrefix+"screen-cap-content";let isDraggable=false;if(parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("width"))+50<toolBW||parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("height"))+50<265){appendTo="#"+this.extPrefix+"floatable-recorder-tool-container";isDraggable=true}this.displayCameraWindow(appendTo);let newElement$=$(html).width(toolBW).draggable({disabled:isDraggable,cancel:"text",containment:appendTo,start:()=>{jQuery("#"+this.extPrefix+"floatable-recorder-tool").css({bottom:"unset"})},stop:()=>{},scroll:false,drag:function(e,ui){let self=$(this);let parent=$(appendTo);let pos=self.position();pos.left=pos.left-parent.offset().left-2;pos.top=pos.top-parent.offset().top-2;$("#"+self.data("index")).html("top: "+pos.top+" left:"+pos.left)}}).css({position:"absolute"}).offset(offset).appendTo(appendTo);let capW=parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("width"));if(capW<750){jQuery("#"+this.extPrefix+"video-outer").css({bottom:"75px"})}if(appendTo=="#"+this.extPrefix+"floatable-recorder-tool-container"){toolX=parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("left"));toolY=parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("top"))+parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("height"))-130;jQuery("#"+this.extPrefix+"floatable-recorder-tool").css({top:toolY+"px",left:toolX+"px"});if(this.recordingType!=1){jQuery("#"+this.extPrefix+"video-outer").addClass("camera-view-2")}this.prevSelectionH=125}else{if(this.recordingType!=1){jQuery("#"+this.extPrefix+"video-outer").addClass("camera-view-3")}this.prevSelectionH=206}if(this.recordingType!=1){this.putCamOptionCenter()}this.recorderControlPanelStates();this.controlBarButtonCallbacks(delayVal,autostopVal,callback)})});jQuery("#"+this.extPrefix+"selected-screen-capture-inner").unbind("mousedown");jQuery("#"+this.extPrefix+"selected-screen-capture-inner").on("mousedown",e=>{this.video_crop=true;this.record_crop_startX=e.clientX;this.record_crop_startY=e.clientY});jQuery("#"+this.extPrefix+"selected-screen-capture-inner").unbind("mousemove");jQuery("#"+this.extPrefix+"selected-screen-capture-inner").on("mousemove",e=>{if(this.video_crop){jQuery("#"+this.extPrefix+"selected-screen-capture-inner").css({"background-color":"transparent"});let winW=jQuery(e.currentTarget).width();let winH=jQuery(e.currentTarget).height();if(!jQuery("#dimensions-message").length){jQuery("."+this.extPrefix+"screen-cap-content").html('<span id="dimensions-message">0*0 (min. 500*350)</span>')}let contentW=e.clientX-this.record_crop_startX;let contentH=e.clientY-this.record_crop_startY;jQuery("#dimensions-message").html(contentW+"*"+contentH+" (min. 500*350)");let contentT=this.record_crop_startY;let contentL=this.record_crop_startX;let topW=this.record_crop_startX+contentW;let topH=this.record_crop_startY;let rightW=winW-topW;let rightH=topH+contentH;let leftW=this.record_crop_startX;let leftH=winH-topH;let bottomW=winW-leftW;let bottomH=winH-rightH;contentW=contentW+"px";contentH=contentH+"px";contentT=contentT+"px";contentL=contentL+"px";topW=topW+"px";topH=topH+"px";rightW=rightW+"px";rightH=rightH+"px";leftW=leftW+"px";leftH=leftH+"px";bottomW=bottomW+"px";bottomH=bottomH+"px";jQuery("."+this.extPrefix+"screen-cap-top").css({width:topW,height:topH});jQuery("."+this.extPrefix+"screen-cap-right").css({width:rightW,height:rightH});jQuery("."+this.extPrefix+"screen-cap-left").css({width:leftW,height:leftH});jQuery("."+this.extPrefix+"screen-cap-bottom").css({width:bottomW,height:bottomH});jQuery("."+this.extPrefix+"screen-cap-content").css({width:contentW,height:contentH,"z-index":2,top:contentT,left:contentL})}});jQuery("#"+this.extPrefix+"selected-screen-capture-inner").unbind("mouseup");jQuery("#"+this.extPrefix+"selected-screen-capture-inner").on("mouseup",()=>{let capW=parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("width"));let capH=parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("height"));if(capW<500||capH<350){this.video_crop=false;jQuery("#"+this.extPrefix+"selected-screen-capture-inner").css({"background-color":"rgba(0, 0, 0, 0.3)"});jQuery("."+this.extPrefix+"screen-cap-top").css({width:0,height:0});jQuery("."+this.extPrefix+"screen-cap-right").css({width:0,height:0});jQuery("."+this.extPrefix+"screen-cap-left").css({width:0,height:0});jQuery("."+this.extPrefix+"screen-cap-bottom").css({width:0,height:0});jQuery("."+this.extPrefix+"screen-cap-content").css({width:0,height:0,"z-index":2,top:0,left:0});alert("Selction must be more than 500*350.");return}this.video_crop=false;jQuery("#"+this.extPrefix+"recorder-tool-controls-inner").hide();jQuery("#"+this.extPrefix+"camera-recording-preview").hide();jQuery("."+this.extPrefix+"close-toobar").hide();jQuery("#"+this.extPrefix+"recorder-tool-custom-tab").show();let toolX=0;let toolY=0;if(this.recordingType=="5"){toolX=parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("left"))+parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("width"))-130;toolY=parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("top"))+parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("height"))}else{toolX=parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("left"));toolY=parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("top"))+parseInt(jQuery("."+this.extPrefix+"screen-cap-content").css("height"))}jQuery("#"+this.extPrefix+"floatable-recorder-tool").css({top:toolY-45+"px",left:toolX+5+"px"});jQuery("#"+this.extPrefix+"floatable-recorder-tool").show();if(this.isCameraRecord){jQuery("#"+this.extPrefix+"video-outer").show()}jQuery("#"+this.extPrefix+"selected-screen-capture-inner").unbind("mouseup");jQuery("#"+this.extPrefix+"selected-screen-capture-inner").unbind("mousedown");jQuery("#"+this.extPrefix+"selected-screen-capture-inner").unbind("mousemove")})};recorderControlPanelStates=()=>{if(this.isCameraRecord){jQuery("."+this.extPrefix+"cam-rec-disable").show();jQuery("."+this.extPrefix+"cam-rec").hide()}else{jQuery("."+this.extPrefix+"cam-rec-disable").hide();jQuery("."+this.extPrefix+"cam-rec").show()}if(this.isMicrophoneRecord){jQuery("."+this.extPrefix+"mic-rec-disable").show();jQuery("."+this.extPrefix+"mic-rec").hide()}else{jQuery("."+this.extPrefix+"mic-rec-disable").hide();jQuery("."+this.extPrefix+"mic-rec").show()}};delayBeforeRecording=(delayVal,callback)=>{let intervalStart=delayVal;let delayTimer=setInterval(()=>{intervalStart=intervalStart-1;if(intervalStart>0){jQuery("."+this.extPrefix+"recorder-wait-overlay-inner .timer-span").text(intervalStart)}else{callback();clearInterval(delayTimer)}},1e3)};cancelScreenRecording=load=>{this.isCancelledRecord=true;if(this.recordingType==1&&load===undefined){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"cancelToolbar"})}this.stopScreenRecording()};hidePanelRecording=(type,load)=>{if(type=="disabled"){this.isPanelRecord=false;jQuery("#"+this.extPrefix+"floatable-recorder-tool").hide();jQuery("#"+this.extPrefix+"video-outer").hide()}else{this.isPanelRecord=true;jQuery("#"+this.extPrefix+"floatable-recorder-tool").show();jQuery("#"+this.extPrefix+"video-outer").show()}chrome.runtime.sendMessage({type:"sendRecorderToolData",badgeText:this.VideoDuration,isCamera:this.isCameraRecord,isMicrophone:this.isMicrophoneRecord,isPanel:this.isPanelRecord,isPlay:this.isPlayRecord,recordingType:this.recordingType,isDevicesAvailable:this.isDevicesAvailable});if(this.recordingType==1&&load===undefined){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"toolbarEventsAllTabs",reqSubType:"panel",reqVal:this.isPanelRecord})}};stopScreenRecording=()=>{this.recordingStarted=false;if(intTimer){intTimer.pause()}if(timeoutTimer){timeoutTimer.pause()}if(this.media_recorder&&this.media_recorder!==null){this.media_recorder.stop()}this.removeStreams();chrome.runtime.sendMessage({type:"unsetBadge"});this.resetControlBarEvents();this.stopCameraScreen()};removeCamStreams=()=>{if(this.cam_stream&&this.cam_stream!==null){let tracks=this.cam_stream.getTracks();tracks.forEach(track=>{track.stop()})}};removeStreams=()=>{if(this.composedStream&&this.composedStream!==null){let tracks=this.composedStream.getTracks();tracks.forEach(track=>{track.stop()})}if(this.audioStream&&this.audioStream!==null){let tracks=this.audioStream.getTracks();tracks.forEach(track=>{track.stop()})}if(this.screenStream&&this.screenStream!==null){let tracks=this.screenStream.getTracks();tracks.forEach(track=>{track.stop()})}if(this.combine_stream&&this.combine_stream!==null){let tracks=this.combine_stream.getTracks();tracks.forEach(track=>{track.stop()})}if(this.media_recorder){this.media_recorder=null}};resetControlBarEvents=()=>{jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"play-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"pause-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"mic-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec-disable").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"stop-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"maximize-rec").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"minimize-rec").unbind("click");jQuery("."+this.extPrefix+"remove-anno-effects ."+this.extPrefix+"effect-child-options span").unbind("click");jQuery("."+this.extPrefix+"anno-effects ."+this.extPrefix+"effect-child-options span").unbind("click");jQuery("."+this.extPrefix+"arrow-effects ."+this.extPrefix+"effect-child-options span").unbind("click");jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"close-rec").unbind("click");jQuery("#"+this.extPrefix+"selected-screen-capture-inner").unbind("mousedown");jQuery("#"+this.extPrefix+"selected-screen-capture-inner").unbind("mousemove");jQuery("#"+this.extPrefix+"selected-screen-capture-inner").unbind("mouseup");if(jQuery("#"+this.extPrefix+"draw-recording-anno")){jQuery("#"+this.extPrefix+"draw-recording-anno").remove()}if(jQuery(".shape-highlight-mouse")){jQuery(".shape-highlight-mouse").remove()}if(jQuery(".shape-highlight-click")){jQuery(".shape-highlight-click").remove()}if(jQuery("."+this.extPrefix+"arrow-spotlight-outer")){jQuery("."+this.extPrefix+"arrow-spotlight-outer").remove()}if(jQuery("#"+this.extPrefix+"floatable-recorder-tool")){jQuery("#"+this.extPrefix+"floatable-recorder-tool").remove()}if(jQuery("#"+this.extPrefix+"video-outer")){jQuery("#"+this.extPrefix+"video-outer").remove()}if(jQuery("#"+this.extPrefix+"selected-screen-capture")){jQuery("#"+this.extPrefix+"selected-screen-capture").remove()}if(jQuery("#"+this.extPrefix+"recorder-wait-overlay")){jQuery("#"+this.extPrefix+"recorder-wait-overlay").remove()}if(jQuery("#"+this.extPrefix+"floatable-recorder-tool-container")){jQuery("#"+this.extPrefix+"floatable-recorder-tool-container").remove()}if(jQuery("#"+this.extPrefix+"floatable-recorder-camera-container")){jQuery("#"+this.extPrefix+"floatable-recorder-camera-container").remove()}recordAnnotation.mouseAnnoEvents()};toolbarToggleCam=(type,load)=>{let hh=0;if(jQuery("#"+this.extPrefix+"video-outer").hasClass("camera-view-1")){hh=75}if(jQuery("#"+this.extPrefix+"video-outer").hasClass("camera-view-2")){hh=125}if(jQuery("#"+this.extPrefix+"video-outer").hasClass("camera-view-3")){hh=200}if(jQuery("#"+this.extPrefix+"video-outer").hasClass("camera-view-4")){hh=206}if(type=="disabled"){let camHeight=parseInt(jQuery("#"+this.extPrefix+"camera-recording-preview").height());let toolTop=parseInt(jQuery("#"+this.extPrefix+"floatable-recorder-tool").css("top"));let toolTopPos=toolTop+camHeight;this.isCameraRecord=false;if(this.recordingType!=1){if(this.cam_stream!==undefined&&this.cam_stream!==null){this.cam_stream.getVideoTracks()[0].enabled=false}jQuery("#"+this.extPrefix+"video-outer").css({display:"none",height:0})}jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec").show();jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec-disable").hide();this.stopCameraScreen()}else{this.isCameraRecord=true;if(this.recordingType!=1){jQuery("#"+this.extPrefix+"video-outer").css({display:"block"});this.assignCorrectVidHeight();if(this.cam_stream!==undefined&&this.cam_stream!==null){this.cam_stream.getVideoTracks()[0].enabled=true}}jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec").hide();jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"cam-rec-disable").show();if(load===undefined){this.recordCameraScreen()}}chrome.runtime.sendMessage({type:"sendRecorderToolData",badgeText:this.VideoDuration,isCamera:this.isCameraRecord,isMicrophone:this.isMicrophoneRecord,isPanel:this.isPanelRecord,isPlay:this.isPlayRecord,recordingType:this.recordingType,isDevicesAvailable:this.isDevicesAvailable});if(this.recordingType==1&&load===undefined){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"toolbarEventsAllTabs",reqSubType:"cam",reqVal:this.isCameraRecord})}};toolbarToggleMic=(type,load)=>{if(type=="disabled"){this.isMicrophoneRecord=false;if(this.audioStream!==undefined&&this.audioStream!==null){this.audioStream.getAudioTracks()[0].enabled=false}jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"mic-rec").show();jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"mic-rec-disable").hide()}else{this.isMicrophoneRecord=true;if(this.audioStream!==undefined&&this.audioStream!==null){this.audioStream.getAudioTracks()[0].enabled=true}jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"mic-rec").hide();jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"mic-rec-disable").show()}chrome.runtime.sendMessage({type:"sendRecorderToolData",badgeText:this.VideoDuration,isCamera:this.isCameraRecord,isMicrophone:this.isMicrophoneRecord,isPanel:this.isPanelRecord,isPlay:this.isPlayRecord,recordingType:this.recordingType,isDevicesAvailable:this.isDevicesAvailable});if(this.recordingType==1&&load===undefined){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"toolbarEventsAllTabs",reqSubType:"mic",reqVal:this.isMicrophoneRecord})}};toolbarPlayPause=(type,load)=>{if(type=="play"){this.isPlayRecord=true;if(this.media_recorder&&this.media_recorder!==null){if(intTimer){intTimer.resume()}this.media_recorder.resume();if(timeoutTimer){timeoutTimer.resume()}}if(this.recordingType!="2"){jQuery("#"+this.extPrefix+"floatable-recorder-tool").css({width:"450px"})}else{jQuery("#"+this.extPrefix+"floatable-recorder-tool").css({width:"285px"})}jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"play-rec").hide();jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"pause-rec").show()}else{this.isPlayRecord=false;if(this.media_recorder&&this.media_recorder!==null){if(intTimer){intTimer.pause()}this.media_recorder.pause();if(timeoutTimer){timeoutTimer.pause()}}if(this.recordingType!="2"){jQuery("#"+this.extPrefix+"floatable-recorder-tool").css({width:"450px"})}else{jQuery("#"+this.extPrefix+"floatable-recorder-tool").css({width:"285px"})}jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"pause-rec").hide();jQuery("#"+this.extPrefix+"floatable-recorder-tool-inner ."+this.extPrefix+"play-rec").show()}chrome.runtime.sendMessage({type:"sendRecorderToolData",badgeText:this.VideoDuration,isCamera:this.isCameraRecord,isMicrophone:this.isMicrophoneRecord,isPanel:this.isPanelRecord,isPlay:this.isPlayRecord,recordingType:this.recordingType,isDevicesAvailable:this.isDevicesAvailable});if(this.recordingType==1&&load===undefined){chrome.runtime.sendMessage({type:"executeScriptInallTabs",reqType:"toolbarEventsAllTabs",reqSubType:"play",reqVal:this.isPlayRecord})}};updateControlBarStates=(type,val)=>{let isenabled="disabled";if(val){isenabled="enabled"}else{isenabled="disabled"}switch(type){case"mic":this.toolbarToggleMic(isenabled,"other");break;case"cam":this.toolbarToggleCam(isenabled,"other");break;case"panel":this.hidePanelRecording(isenabled,"other");break;case"play":if(val){isenabled="play"}else{isenabled="pause"}this.toolbarPlayPause(isenabled,"other");break}};updateControlBarTime=timerStr=>{jQuery("#"+this.extPrefix+"recorder-tool-controls ."+this.extPrefix+"timer-rec").text(timerStr);this.VideoDuration=timerStr};handleError=error=>{if(error.name=="NotFoundError"){let data1={[`${helpers.extPrefix}isDevicesAvailable`]:false};let data2={[`${helpers.extPrefix}isDevicesPermitted`]:true};chrome.storage.local.set(data1,()=>{});chrome.storage.local.set(data2,()=>{});chrome.runtime.sendMessage({type:"getAttachedDevicesResponse",devices:[]})}else{let data1={[`${helpers.extPrefix}isDevicesAvailable`]:false};let data2={[`${helpers.extPrefix}isDevicesPermitted`]:false};chrome.storage.local.set(data1,()=>{});chrome.storage.local.set(data2,()=>{});chrome.runtime.sendMessage({type:"getAttachedDevicesResponse",devices:null})}console.log("navigator.MediaDevices.getUserMedia error: ",error.message,error.name)};handleGotStream=stream=>{window.stream=stream;return navigator.mediaDevices.enumerateDevices()};handleGetDevices=(isMic,isCam)=>{let constraints={};constraints={audio:isMic,video:isCam};navigator.mediaDevices.getUserMedia(constraints).then(this.handleGotStream).then(devices=>{if(window.stream){window.stream.getTracks().forEach(track=>{track.stop()})}let data1={[`${helpers.extPrefix}isDevicesAvailable`]:true};chrome.storage.local.set(data1,()=>{});let data2={[`${helpers.extPrefix}isDevicesPermitted`]:true};chrome.storage.local.set(data2,()=>{});chrome.runtime.sendMessage({type:"getAttachedDevicesResponse",devices:devices})})["catch"](this.handleError)}}