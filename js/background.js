let clientIDOauth="289798756049-kb8flpfrcnsib8kviihvi4ijo50njb2b.apps.googleusercontent.com";chrome.manifest=chrome.runtime.getManifest();let screengeniusAPI="https://api.vizam.ai";let screengeniusDashboard="https://vizam.ai";let logoIcon2=chrome.runtime.getURL("/images/quixy-logo-footer.png");let camStream=null;let extPrefix="SG_";let injectIntoTab=tab=>{if(chrome.manifest.content_scripts[0]!==undefined){let scripts=chrome.manifest.content_scripts[0].js;let styles=chrome.manifest.content_scripts[0].css;if(tab.url!==undefined&&!tab.url.match(/(chrome):\/\//gi)){chrome.tabs.get(tab.id,()=>{if(chrome.runtime.lastError){console.log(chrome.runtime.lastError.message)}else{chrome.scripting.executeScript({target:{tabId:tab.id,allFrames:false},files:scripts});chrome.scripting.insertCSS({target:{tabId:tab.id,allFrames:false},files:styles})}})}}};chrome.windows.getAll({populate:true},windows=>{let i=0,w=windows.length,currentWindow;for(;i<w;i++){if(windows[i]!==undefined){currentWindow=windows[i];let j=0,t=currentWindow.tabs.length,currentTab;for(;j<t;j++){currentTab=currentWindow.tabs[j];if(currentTab!==undefined){}}}}});chrome.runtime.onInstalled.addListener(details=>{if(details.reason===chrome.runtime.OnInstalledReason.INSTALL||details.reason===chrome.runtime.OnInstalledReason.UPDATE){chrome.runtime.setUninstallURL(screengeniusDashboard+"/uninstall")}});chrome.runtime.onConnect.addListener(externalPort=>{externalPort.onDisconnect.addListener(()=>{chrome.storage.local.get(`${extPrefix}isRecorderStarted`,resultR=>{let isRecorder=resultR[`${extPrefix}isRecorderStarted`];chrome.tabs.query({active:true,currentWindow:true},tabs=>{chrome.tabs.sendMessage(tabs[0].id,{type:"extensionPopupClosed",isRecording:isRecorder})})})})});chrome.runtime.onMessage.addListener(async(request,sender,sendResponse)=>{if(request.type=="openNewTab"){let data1={[`${extPrefix}quixyScreenshot`]:request.screen};let data2={[`${extPrefix}originalImage`]:request.originalImage};let data3={[`${extPrefix}screenshotName`]:request.screenshotName};let data4={[`${extPrefix}isScreenshotUploadedToServer`]:false};let data5={[`${extPrefix}screenshotUploadServer`]:request.screenshotUploadServer};let data6={[`${extPrefix}cooridnatesDrawnAt`]:[]};chrome.storage.local.set(data1,()=>{});chrome.storage.local.set(data2,()=>{});chrome.storage.local.set(data3,()=>{});chrome.storage.local.set(data4,()=>{});chrome.storage.local.set(data5,()=>{});chrome.storage.local.set(data6,()=>{});chrome.tabs.create({url:chrome.runtime.getURL("downloadScreenshot.html")},newWindow=>{})}else if(request.type=="openDownloadVideoTab"){let data1={[`${extPrefix}recordedVideoData`]:request.videodata};let data2={[`${extPrefix}recordedvideoSize`]:request.videoSize};let data3={[`${extPrefix}recordedVideoDuration`]:request.VideoDuration};let data4={[`${extPrefix}isVideoUploadedToServer`]:false};let data5={[`${extPrefix}recordedVideoUpload`]:request.VideoUpload};chrome.storage.local.set(data1,()=>{});chrome.storage.local.set(data2,()=>{});chrome.storage.local.set(data3,()=>{});chrome.storage.local.set(data4,()=>{});chrome.storage.local.set(data5,()=>{});chrome.tabs.create({url:chrome.runtime.getURL("downloadVideo.html")},newWindow=>{})}else if(request.type=="updateCordinates"){let data={[`${extPrefix}cooridnatesDrawnAt`]:request.cooridnatesDrawnAt};chrome.storage.local.set(data,()=>{})}else if(request.type=="quixyFinalScreenshot"){let data={[`${extPrefix}quixyScreenshotFinal`]:request.screen};chrome.storage.local.set(data,()=>{})}else if(request.type=="quixyDashboardLogout"){chrome.tabs.query({active:true,currentWindow:true},tabs=>{chrome.identity.getAuthToken({interactive:true},token=>{if(tabs[0]!==undefined){chrome.tabs.sendMessage(tabs[0].id,{type:"handleQuixyDashboardLogout"})}})})}else if(request.type=="googleAuth"){chrome.tabs.query({active:true,currentWindow:true},tabs=>{chrome.identity.getAuthToken({interactive:true},token=>{if(tabs[0]!==undefined){chrome.tabs.sendMessage(tabs[0].id,{type:"getGoogleAuth",authToken:token})}})})}else if(request.type==="captureVisibleAreaNoScrollPresent"){chrome.tabs.query({active:true,currentWindow:true},tabs=>{chrome.tabs.captureVisibleTab(null,{quality:100},dataUri=>{if(tabs[0]!==undefined){chrome.tabs.sendMessage(tabs[0].id,{type:"captureVisibleAreaNoScrollPresentRes",dataUri:dataUri})}})})}else if(request.type==="nextFrame"){chrome.tabs.query({active:true,currentWindow:true},tabs=>{chrome.tabs.captureVisibleTab(null,{quality:100},dataUri=>{if(tabs[0]!==undefined){chrome.tabs.sendMessage(tabs[0].id,{type:"sendScroll",dataUri:dataUri})}})})}else if(request.type==="closeExtensionPages"){const extensionId=chrome.runtime.id;chrome.tabs.query({},tabs=>{for(let i=0;i<tabs.length;i++){const tab=tabs[i];if(tab.url&&tab.url!=="chrome-extension://"+extensionId+"/entire_screen.html"&&tab.url.startsWith("chrome-extension://"+extensionId+"/")){chrome.tabs.remove(tab.id)}}})}else if(request.type==="closeExtensionRecordingPage"){const extensionId=chrome.runtime.id;chrome.tabs.query({},tabs=>{for(let i=0;i<tabs.length;i++){const tab=tabs[i];if(tab.url&&tab.url=="chrome-extension://"+extensionId+"/entire_screen.html"){chrome.tabs.remove(tab.id)}}})}else if(request.type==="videocaptureScreen"){chrome.tabs.query({active:true,lastFocusedWindow:true,currentWindow:true},async tabs=>{const currentTab=tabs[0];if(request.event.event=="1"){checkTabExistence(chrome.runtime.getURL("entire_screen.html"),async tabs=>{if(tabs&&tabs!==undefined&&tabs.length>0){let tab=tabs[0];let tabId=tab.id;chrome.tabs.remove(tab.id)}setTimeout(async()=>{const tab=await chrome.tabs.create({url:chrome.runtime.getURL("entire_screen.html"),pinned:true,active:true});chrome.tabs.onUpdated.addListener(async function listener(tabId,info){if(tabId===tab.id&&info.status==="complete"){chrome.tabs.onUpdated.removeListener(listener);await chrome.tabs.sendMessage(tabId,{type:"videocaptureScreenResponseEntire",event:request.event,currentTab:currentTab})}})},200)})}else if(request.event.event==="2"){await chrome.tabs.sendMessage(currentTab.id,{type:"videocaptureScreenResponse",event:request.event})}else{await chrome.tabs.sendMessage(currentTab.id,{type:"videocaptureScreenResponse",event:request.event})}})}else if(request.type==="setBadge"){chrome.action.setBadgeBackgroundColor({color:"red"});chrome.action.setBadgeText({text:request.badgeText})}else if(request.type==="unsetBadge"){chrome.action.setBadgeBackgroundColor({color:"transparent"});chrome.action.setBadgeText({text:""});chrome.storage.local.set({[`${extPrefix}isRecorderStarted`]:false},()=>{})}else if(request.type==="sendRecorderToolData"){let str=request.badgeText+"-"+request.isCamera+"-"+request.isMicrophone+"-"+request.isPanel+"-"+request.isPlay+"-"+request.recordingType+"-"+request.isDevicesAvailable;chrome.storage.local.set({[`${extPrefix}setRecorderToolData`]:str},()=>{})}else if(request.type==="setIsRecorderStarted"){chrome.storage.local.set({[`${extPrefix}isRecorderStarted`]:true},()=>{})}else if(request.type==="quixyGotoDashboardCallback"){chrome.tabs.create({url:screengeniusDashboard+"/dashboard"},newWindow=>{})}else if(request.type==="quixyGotoUpgradePlanCallback"){chrome.tabs.create({url:screengeniusDashboard+"/dashboard#pricing-plans"},newWindow=>{})}else if(request.type==="quixyGoToForgotPasswordCallback"){chrome.tabs.create({url:screengeniusDashboard+"/forgot-password"},newWindow=>{})}else if(request.type==="quixyGoToTraditionalSignUpCallback"){chrome.tabs.create({url:screengeniusDashboard+"/sign-up"},newWindow=>{})}else if(request.type==="quixyGotoQuixyCallback"){chrome.tabs.create({url:"https://quixy.com"},newWindow=>{})}else if(request.type==="quixyGotoQuixyLoginCallback"){chrome.tabs.create({url:screengeniusDashboard+"/login"},newWindow=>{})}else if(request.type==="executeScriptInallTabs"){chrome.windows.getAll({populate:true},windows=>{let i=0,w=windows.length,currentWindow;for(;i<w;i++){if(windows[i]!==undefined){currentWindow=windows[i];let j=0,t=currentWindow.tabs.length,currentTab;for(;j<t;j++){let tab=currentWindow.tabs[j];let tabId=tab.id;if(tab!==undefined){if(chrome.manifest.content_scripts[0]!==undefined){if(tab.url!==undefined&&!tab.url.match(/(chrome):\/\//gi)){chrome.tabs.get(tabId,tab=>{if(chrome.runtime.lastError){console.log(chrome.runtime.lastError.message)}else{chrome.tabs.sendMessage(tab.id,{type:"executeScriptInallTabsCallback",event:request})}})}}}}}}})}else if(request.type==="quixyUserLoginCallback"){try{let auth_url=`https://accounts.google.com/o/oauth2/v2/auth?`;let auth_params={client_id:clientIDOauth,redirect_uri:chrome.identity.getRedirectURL(),response_type:"token",scope:"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile openid",prompt:"select_account"};const url=new URLSearchParams(Object.entries(auth_params));url.toString();auth_url+=url;chrome.identity.launchWebAuthFlow({url:auth_url,interactive:true},token=>{if(token){let tokenStr=token.split("access_token=");let tokenStr1=tokenStr[1].split("token_type=");let fToken=tokenStr1[0];chrome.tabs.sendMessage(request.event.tabId,{type:"quixyUserLoginResponse",token:fToken})}else{chrome.tabs.sendMessage(request.event.tabId,{type:"quixyLoginFailed"})}})}catch(error){chrome.tabs.sendMessage(request.event.tabId,{type:"quixyLoginFailed"})}}else if(request.type==="quixyUserLoginXMLCall"){let email=request.res.email;let name=request.res.name;let pic=request.res.picture;let data={email:email,name:name,picture:pic,token_type:"extension"};const response=await fetch(screengeniusAPI+"/user/login",{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"},redirect:"follow",referrerPolicy:"no-referrer",body:JSON.stringify(data)}).then(response=>response.json()).then(res=>{if(res.status){if(res.data.picture){const parsedUrl=removeDomainFromPath(screengeniusAPI,res.data.picture);res.data.picture=parsedUrl}chrome.runtime.sendMessage({type:"quixyuserData",user:res.data});let data={[`${extPrefix}quixyLoginUserData`]:res.data};chrome.storage.local.set(data,()=>{})}})["catch"](error=>{console.error("Error making API request:",error)})}else if(request.type==="quixyGotoQuixyLoginFacebook"){try{const CLIENT_ID="3147454238896419";const REDIRECT_URI=chrome.identity.getRedirectURL();const YOUR_STATE=Math.random().toString(36).substring(7);chrome.identity.launchWebAuthFlow({url:`https://www.facebook.com/v19.0/dialog/oauth?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&state=${YOUR_STATE}`,interactive:true},token=>{if(token){const urlParams=new URLSearchParams(token.split("?")[1]);const codes=urlParams.get("code");const state=urlParams.get("state");let data={code:codes,redirect_uri:REDIRECT_URI};chrome.tabs.sendMessage(request.event.tabId,{type:"quixyGotoQuixyLoginFacebookResponse",token:data})}else{chrome.tabs.sendMessage(request.event.tabId,{type:"quixyLoginFailed"})}})}catch(error){chrome.tabs.sendMessage(request.event.tabId,{type:"quixyLoginFailed"})}}else if(request.type==="quixyGotoQuixyLoginFacebookResponse2"){if(request.res){chrome.tabs.query({active:true,currentWindow:true},function(tabs){chrome.tabs.sendMessage(tabs[0].id,{type:"quixyGotoQuixyLoginFacebookCallback",data:request.res})})}else{chrome.tabs.query({active:true,currentWindow:true},function(tabs){chrome.tabs.sendMessage(tabs[0].id,{type:"quixyLoginFailed"})})}}else if(request.type==="quixyGotoQuixyLoginTwitterResponse"){try{chrome.identity.launchWebAuthFlow({url:`https://api.twitter.com/oauth/authorize?oauth_token=${request.oauthToken}`,interactive:true},token=>{if(token){const params=new URLSearchParams(new URL(token).search);const oauthToken=params.get("oauth_token");var oauthVerifier=params.get("oauth_verifier");var oauth_callback_confirmed=params.get("oauth_callback_confirmed");chrome.tabs.sendMessage(request.tabId,{type:"quixyGotoQuixyLoginTwitterResponsecallback",data:[request.oauthToken,oauthVerifier]})}else{chrome.tabs.sendMessage(request.tabId,{type:"quixyLoginFailed"})}})}catch(error){chrome.tabs.sendMessage(request.event.tabId,{type:"quixyLoginFailed"})}}else if(request.type=="quixyGotoQuixyLoginLinkedin"){const authData={CLIENT_ID:"770lg3auun6mvh",CLIENT_SECRET:"46LgxOUjQZmrVp6S",REDIRECT_URI:chrome.identity.getRedirectURL(),YOUR_STATE:Math.random().toString(36).substring(7)};chrome.identity.launchWebAuthFlow({url:`https://www.linkedin.com/oauth/v2/authorization?response_type=code&state=${authData.YOUR_STATE}&scope=email w_member_social profile openid&client_id=${authData.CLIENT_ID}&redirect_uri=${authData.REDIRECT_URI}`,interactive:true},token=>{if(token){chrome.tabs.sendMessage(request.event.tabId,{type:"quixyGotoQuixyLoginLinkedinResponse",data:[token,authData,request.event.tabId]})}else{chrome.tabs.sendMessage(request.event.tabId,{type:"quixyLoginFailed"})}})}else if(request.type=="quixyGotoQuixyLoginLinkedinResponseBack"){try{const myHeaders=new Headers;myHeaders.append("Authorization","Bearer "+request.access_token);myHeaders.append("X-Restli-Protocol-Version","2.0.0");const requestOptions={method:"GET",headers:myHeaders,redirect:"follow"};fetch("https://api.linkedin.com/v2/userinfo",requestOptions).then(response=>{if(response.ok){return response.json()}else{chrome.tabs.sendMessage(request.tabId,{type:"quixyLoginFailed"})}}).then(profileData=>{chrome.tabs.sendMessage(request.tabId,{type:"quixyGotoQuixyLoginLinkedinResponseFinal",data:[profileData]})})["catch"](error=>{chrome.tabs.sendMessage(request.tabId,{type:"quixyLoginFailed"})})}catch(error){chrome.tabs.sendMessage(request.tabId,{type:"quixyLoginFailed"})}}else if(request.type=="quixyLoginFailedBackground"){chrome.tabs.query({active:true,currentWindow:true},function(tabs){chrome.tabs.sendMessage(tabs[0].id,{type:"quixyLoginFailed"})})}else if(request.type==="getActiveSessionCall"){if(request.token){getActiveSessionCall(request.token)}else{chrome.storage.local.get(`${extPrefix}quixyLoginUserData`,result=>{if(result[`${extPrefix}quixyLoginUserData`]!==undefined&&result[`${extPrefix}quixyLoginUserData`]!==""&&result[`${extPrefix}quixyLoginUserData`]!==null){getActiveSessionCall(result[`${extPrefix}quixyLoginUserData`]?.access_token)}})}}else if(request.type==="quixyUserLogoutCall"){fetch(screengeniusAPI+"/user/logout").then(response=>{return response}).then(res=>{let data={[`${extPrefix}quixyLoginUserData`]:null};chrome.storage.local.set(data,()=>{})})["catch"](error=>{console.log("Error making API request:",error)})}else if(request.type==="quixyOpenEditorCallback"){let data={[`${extPrefix}quixyScreenshot`]:""};chrome.storage.local.set(data,()=>{});if(request.event.action=="screenshot"){chrome.tabs.create({url:chrome.runtime.getURL("downloadScreenshot.html")},newWindow=>{})}else{chrome.tabs.create({url:screengeniusDashboard+"/video-upload"},newWindow=>{})}}});const checkTabExistence=(url,callback)=>{chrome.tabs.query({url:url},tabs=>{if(tabs.length>0){callback(tabs)}else{callback()}})};const getActiveSessionCall=token=>{let data={access_token:token,token_type:"extension"};fetch(screengeniusAPI+"/user/get",{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"},redirect:"follow",referrerPolicy:"no-referrer",body:JSON.stringify(data)}).then(response=>response.json()).then(res=>{if(res.status){if(res.data.picture){const parsedUrl=removeDomainFromPath(screengeniusAPI,res.data.picture);res.data.picture=parsedUrl}chrome.runtime.sendMessage({type:"quixyuserData",user:res.data});let data={[`${extPrefix}quixyLoginUserData`]:res.data};chrome.storage.local.set(data,()=>{})}else{let data={[`${extPrefix}quixyLoginUserData`]:""};chrome.storage.local.set(data,()=>{})}})["catch"](error=>{console.error("Error making API request:",error)})};const removeDomainFromPath=(serverURL,fileURL)=>{if(fileURL){let localFileURL=fileURL.replace(/^https?:\/\/[^\/]+/,"");let fullLocalURL=serverURL+localFileURL;return fullLocalURL}};